<Window x:Class="RsaPpkManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RsaPpkManager"
        mc:Ignorable="d"
        Title="RSA PPK Manager" Height="768" Width="1024"
        WindowStartupLocation="CenterScreen" Icon="RsaPpkIcon.ico"
        d:DataContext="{d:DesignInstance local:MainWindowViewModel}">
    <Grid>
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TabControl Grid.Row="0">
                <TabItem Header="SQL Management">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" TextWrapping="Wrap" FontSize="16">
                            The use of Microsoft SQL Server is <Italic>optional</Italic> but it helps in managing PPK's. You'll have to create the database yourself but we'll 
                            give you the script to use. Use the button below to get the database create script. After the database is created enter the connection string in 
                            the text box below the button and click <Bold>Connect</Bold>. The user you connect to the database with has to have permissions to run SELECT, 
                            INSERT, UPDATE, DELETE, CREATE TYPE and DROP TYPE.<LineBreak /><LineBreak />
                            In order to get the XML for a database record you'll have to import the key into Windows. Having the key by itself is meaningless, it can't encrypt or 
                            decrypt data without being imported into the OS. After importing it to the operating system, you'll have to then export it. Basically get it from 
                            Windows. :P
                        </TextBlock>
                        <Button Grid.Row="1" Content="Show database script" HorizontalAlignment="Left" Margin="0,10" Command="{Binding ShowDatabaseScriptCommand}" />
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Connection string" Padding="0,1,0,0" />
                            <TextBox Grid.Column="1" Margin="5,0" Text="{Binding ConnectionString}" />
                            <Button Grid.Column="2" Content="Connect" Command="{Binding ConnectDatabaseCommand}" />
                        </Grid>
                        <Border Grid.Row="3" Background="Black" Height="2" Margin="0,10" />
                        <TextBlock Grid.Row="4" Text="Existing RSA PPK's in Database" />
                        <Grid Grid.Row="5" HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Content="Add" />
                            <Button Grid.Column="1" Content="Edit" Margin="5,0" />
                            <Button Grid.Column="2" Content="Remove" />
                        </Grid>
                        <ListView Grid.Row="6" Margin="0,5,0,0">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Name"
                                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, 
                                                                    Converter={StaticResource ArithmeticConverter}, ConverterParameter=*.25}" />
                                    <GridViewColumn Header="RSA PPK XML"
                                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, 
                                                                    Converter={StaticResource ArithmeticConverter}, ConverterParameter=*.70}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Border Grid.Row="4" Grid.RowSpan="3" Background="#AA000000" Visibility="{Binding DatabaseOverlayVisibility}">
                            <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Left" FontSize="24" Foreground="White"
                                       Text="Please connect to a database first in order to see the keys that exist in the database. This is optional." />
                        </Border>
                        <Border Grid.Row="0" Grid.RowSpan="7" Background="#AA000000" Visibility="{Binding OverlayVisibility}">
                            <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Left" FontSize="24" Foreground="White"
                                       Text="{Binding OverlayMessage}" />
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="Create">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <TextBlock TextWrapping="Wrap" FontSize="16">
                                Note on optional SQL and why.<LineBreak /><LineBreak />
                                As a security feature Windows <Bold>does not</Bold> tell us what the names of the stored RSA PPK pairs are, you cannot query Windows for this information. 
                                You MUST know the name of your key <Italic>exactly</Italic>! Casing is important!<LineBreak /><LineBreak />
                                When you create a key write down the name and store it somewhere so you know what it is, again you cannot ask Windows for it is later.<LineBreak /><LineBreak />
                                Instead, connect a database created by the script given in the <Underline>SQL Management</Underline> tab. If a database is connected, when you go to create a 
                                key you'll have the option to store this information in the connected database.<LineBreak /><LineBreak />
                                <Bold><Italic>*Warning</Italic></Bold> just because a PPK pair exists in the database DOES NOT mean that it has been imported into Windows. Use the <Underline>Import</Underline> tab 
                                to manage this. (However if you create one here in the <Underline>Create</Underline> tab and there is a database connected you'll have the option to store it immediately.)
                                <LineBreak /><LineBreak />
                                <Italic><Bold>** We are unaware of the keys that currently exist in this Windows machine. **</Bold></Italic>
                            </TextBlock>
                        </ScrollViewer>
                        <Grid Grid.Row="1" Margin="0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Padding="0,1,0,0" Text="Private Public Key Pair Name" />
                            <TextBox Grid.Column="1" Margin="5,0" Text="{Binding CreationPpkName}" />
                            <Button Grid.Column="2" Content="Create PPK Pair" Command="{Binding CreatePpkCommand}" />
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="Delete">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <TextBlock TextWrapping="Wrap" FontSize="16">
                                When deleting a PPK you will have to manually delete the matching record in the database yourself. You can manage this from the 
                                <Underline>SQL Management</Underline> tab.
                            </TextBlock>
                        </ScrollViewer>
                        <Grid Grid.Row="1" Margin="0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Padding="0,1,0,0" Text="Private Public Key Pair Name" />
                            <TextBox Grid.Column="1" Margin="5,0" Text="{Binding DeletionPpkName}" />
                            <Button Grid.Column="2" Content="Delete PPK Pair" Command="{Binding DeletePpkCommand}" />
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="Import">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" TextWrapping="Wrap" FontSize="16">
                            The file will be imported into Windows and stored under that PPK pair name.<LineBreak /><LineBreak />
                            The imported file MUST come from the executable <Underline>ASPNET_REGIIS</Underline> as an export. It would just be easier to use this application's 
                            <Underline>Export</Underline> tab to manage this problem. Have this application on the computer you want to export from and have it also on the computer 
                            you want to import into. Export on one PC and import on another PC. This way data encrypted on one machine can be decrypted on another.
                        </TextBlock>
                        <Grid Grid.Row="1" Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="File" />
                            <TextBox Grid.Column="1" Margin="5,0" Text="{Binding ImportFileName}" />
                            <Button Grid.Column="2" Content="Browse" Command="{Binding ImportBrowseCommand}" />
                        </Grid>
                        <Grid Grid.Row="2" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="PPK Pair Name" />
                            <TextBox Grid.Column="1" Margin="5,0" Text="{Binding ImportPpkName}" />
                            <Button Grid.Column="2" Content="Import PPK Pair" Command="{Binding ImportPpkCommand}" />
                        </Grid>
                        <Border Grid.Row="3" Background="Black" Height="2" Margin="0,10" />
                        <Grid Grid.Row="4">
                            <ListView Margin="0,5,0,0">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Name"
                                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, 
                                                                    Converter={StaticResource ArithmeticConverter}, ConverterParameter=*.25}" />
                                        <GridViewColumn Header="RSA PPK XML"
                                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, 
                                                                    Converter={StaticResource ArithmeticConverter}, ConverterParameter=*.70}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                        <Button Grid.Row="5" Content="Import Selected Database Record" HorizontalAlignment="Center" Margin="0,20,0,0" />
                        <Border Grid.Row="4" Grid.RowSpan="5" Background="#AA000000" Visibility="{Binding DatabaseOverlayVisibility}">
                            <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Left" FontSize="24" Foreground="White"
                                       Text="Please connect to a database first in order to see the keys that exist in the database. This is optional." />
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="Export">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" TextWrapping="Wrap" FontSize="16">
                            The file will be saved at the location specified containing the XML for the PPK pair.<LineBreak /><LineBreak />
                            Exporting can be useful in sharing PPK pairs across machines so that data can be encrypted on one machine and then decrypted on another.
                        </TextBlock>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="File" />
                            <TextBox Grid.Column="1" Margin="5,0" Text="{Binding ExportFileName}" />
                            <Button Grid.Column="2" Content="Browse" Command="{Binding ExportBrowseCommand}" />
                        </Grid>
                        <Grid Grid.Row="2" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="PPK Pair Name" />
                            <TextBox Grid.Column="1" Margin="5,0" Text="{Binding ExportPpkName}" />
                            <Button Grid.Column="2" Content="Export PPK Pair" Command="{Binding ExportPpkCommand}" />
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
            <TextBlock Grid.Row="1" Background="{Binding StatusBackground}" Text="{Binding StatusMessage}" Padding="5" />
        </Grid>
    </Grid>
</Window>
